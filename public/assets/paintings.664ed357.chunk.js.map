{"version":3,"sources":["webpack:///./src/routes/paintingsPage/PaintingsPage.css?95c5","/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/paintingsPage/PaintingsPage.css","/Users/marioncasters/Sites/GIT/marioncasters-site/src/data/graphql/queries/getItemsByYear.graphql","/Users/marioncasters/Sites/GIT/marioncasters-site/src/data/graphql/queries/getItemsByHalfYear.graphql","webpack:///./src/components/ItemDir/ItemTab/ItemTab.css?e9a5","/Users/marioncasters/Sites/GIT/marioncasters-site/src/components/ItemDir/ItemTab/ItemTab.css","/Users/marioncasters/Sites/GIT/marioncasters-site/src/components/ItemDir/ItemTab/ItemTab.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/paintingsPage/PaintingsPage.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/paintingsPage/index.js"],"names":["css","__webpack_require__","insertCss","content","module","i","exports","locals","_getContent","_getCss","_insertCss","options","push","title","doc","kind","definitions","operation","name","value","variableDefinitions","variable","type","directives","selectionSet","selections","arguments","loc","start","end","source","body","locationOffset","line","column","definitionRefs","findOperation","length","element","forEach","def","refs","Set","collectFragmentReferences","node","add","selection","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","oneQuery","loading","titleTab","buttonLink","_jsx","Alert","message","isError","ItemTab","window","scrollTo","top","left","behavior","React","Component","_this2","this","_this$props","props","year","half","react_apollo_esm","query","GET_ITEMS_BY_YEAR_QUERY","variables","ssr","_ref","error","data","className","s","react","getItemsByYear","map","item","Item","ITEM_CONST","TYPE","PAINTING","_ref2","onClick","scrollTop","GET_ITEMS_BY_HALF_YEAR_QUERY","_ref3","getItemsByHalfYear","_ref4","withStyles","PaintingsPage","PaintingsPage_jsx","esm","toString","ItemDir_ItemTab_ItemTab","ITEM_CONSTANTS","_callee","description","regeneratorRuntime","wrap","_context","prev","next","TITLE","META_HTML_CONSTANTS","META_DESCRIPTION","abrupt","chunks","component","paintingsPage_jsx","Layout","routes_paintingsPage_PaintingsPage","stop","action"],"mappings":"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","file":"paintings.664ed357.chunk.js","sourcesContent":["\n    var refs = 0;\n    var css = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-rules-3!../../../node_modules/postcss-loader/src/index.js??ref--7-rules-4!./PaintingsPage.css\");\n    var insertCss = require(\"!../../../node_modules/isomorphic-style-loader/insertCss.js\");\n    var content = typeof css === 'string' ? [[module.id, css, '']] : css;\n\n    exports = module.exports = css.locals || {};\n    exports._getContent = function() { return content; };\n    exports._getCss = function() { return '' + css; };\n    exports._insertCss = function(options) { return insertCss(content, options) };\n\n    // Hot Module Replacement\n    // https://webpack.github.io/docs/hot-module-replacement\n    // Only activated in browser context\n    if (module.hot && typeof window !== 'undefined' && window.document) {\n      var removeCss = function() {};\n      module.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-rules-3!../../../node_modules/postcss-loader/src/index.js??ref--7-rules-4!./PaintingsPage.css\", function() {\n        css = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-rules-3!../../../node_modules/postcss-loader/src/index.js??ref--7-rules-4!./PaintingsPage.css\");\n        content = typeof css === 'string' ? [[module.id, css, '']] : css;\n        removeCss = insertCss(content, { replace: true });\n      });\n      module.hot.dispose(function() { removeCss(); });\n    }\n  ","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"._3J8XN{display:none}\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"title\": \"_3J8XN\"\n};","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getItemsByYear\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getItemsByYear\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"technique\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"length\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":184}};\n    doc.loc.source = {\"body\":\"query getItemsByYear($year: Int!, $type: String!) {\\n  getItemsByYear(year: $year, type: $type) {\\n    title\\n    date\\n    technique\\n    description\\n    height\\n    width\\n    length\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getItemsByYear\"] = oneQuery(doc, \"getItemsByYear\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getItemsByYear\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"half\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getItemsByHalfYear\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"half\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"half\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"technique\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"length\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":214}};\n    doc.loc.source = {\"body\":\"query getItemsByYear($year: Int!, $type: String!, $half: Int!) {\\n  getItemsByHalfYear(year: $year, type: $type, half: $half) {\\n    title\\n    date\\n    technique\\n    description\\n    height\\n    width\\n    length\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getItemsByYear\"] = oneQuery(doc, \"getItemsByYear\");\n        \n","\n    var refs = 0;\n    var css = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-rules-3!../../../../node_modules/postcss-loader/src/index.js??ref--7-rules-4!./ItemTab.css\");\n    var insertCss = require(\"!../../../../node_modules/isomorphic-style-loader/insertCss.js\");\n    var content = typeof css === 'string' ? [[module.id, css, '']] : css;\n\n    exports = module.exports = css.locals || {};\n    exports._getContent = function() { return content; };\n    exports._getCss = function() { return '' + css; };\n    exports._insertCss = function(options) { return insertCss(content, options) };\n\n    // Hot Module Replacement\n    // https://webpack.github.io/docs/hot-module-replacement\n    // Only activated in browser context\n    if (module.hot && typeof window !== 'undefined' && window.document) {\n      var removeCss = function() {};\n      module.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-rules-3!../../../../node_modules/postcss-loader/src/index.js??ref--7-rules-4!./ItemTab.css\", function() {\n        css = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-rules-3!../../../../node_modules/postcss-loader/src/index.js??ref--7-rules-4!./ItemTab.css\");\n        content = typeof css === 'string' ? [[module.id, css, '']] : css;\n        removeCss = insertCss(content, { replace: true });\n      });\n      module.hot.dispose(function() { removeCss(); });\n    }\n  ","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \":root{--font-family-base:Montserrat,Ubuntu,sans-serif;--font-weight:100;--max-content-width:1000px;--max-content-form:25em;--aside-width-md:28%;--aside-width-lg:28%;--aside-width:20%;--header-height-mobile:70px;--top-padding-mobile:9em;--top-padding:5em;--color-xxlight:#fafafa;--color-xlight:#eee;--color-light:#ccc;--color-medium:#aaa;--color-dark:#777;--color-xdark:#555;--color-xxdark:#333;--link-color:#ab8b8b;--link-color-dark:#a86363;--link-color-xdark:#754b49;--font-size-header-sm-mobile:1.3em;--font-size-header-md-mobile:1.8em;--font-size-header:2em;--font-size-nav:17px;--font-size-tab:20px;--font-size-current-title:15px;--font-size-current-plus-plus:14px;--font-size-current-plus:13px;--font-size-current:12px;--font-size-minus:11px}._3dcqs{height:available}.hOa0n{display:none}._3tgdZ{font-family:Montserrat,Ubuntu,sans-serif!important;font-family:var(--font-family-base)!important;font-size:14px;font-size:var(--font-size-current-plus-plus);color:#ab8b8b;color:var(--link-color);padding:2px 5px;display:inline;margin:0;background:none;border:none;width:inherit;line-height:inherit;cursor:pointer;-webkit-transition:color .4s;-o-transition:color .4s;transition:color .4s}._3tgdZ:focus,._3tgdZ:hover{color:#754b49;color:var(--link-color-xdark)}\", \"\"]);\n\n// Exports\nexports.locals = {\n\t\"loading\": \"_3dcqs\",\n\t\"titleTab\": \"hOa0n\",\n\t\"buttonLink\": \"_3tgdZ\"\n};","/* eslint-disable react/forbid-prop-types */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport withStyles from 'isomorphic-style-loader/withStyles';\n\nimport ITEM_CONST from '../../../constants/itemConstants';\nimport GET_ITEMS_BY_YEAR_QUERY from '../../../data/graphql/queries/getItemsByYear.graphql';\nimport GET_ITEMS_BY_HALF_YEAR_QUERY from '../../../data/graphql/queries/getItemsByHalfYear.graphql';\nimport Item from '../Item/Item';\nimport s from './ItemTab.css';\nimport Alert from '../../Alert';\n\nclass ItemTab extends React.Component {\n  static propTypes = {\n    year: PropTypes.number.isRequired,\n    half: PropTypes.number.isRequired,\n    type: PropTypes.string.isRequired,\n  };\n\n  scrollTop = () => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  };\n\n  render() {\n    const { year, half, type } = this.props;\n\n    return half === 0 ? (\n      <Query query={GET_ITEMS_BY_YEAR_QUERY} variables={{ year, type }} ssr>\n        {({ loading, error, data }) => {\n          if (loading) return <div className={s.loading}>Chargement...</div>;\n\n          return (\n            <Fragment>\n              <h2 className={s.titleTab}>{year}</h2>\n              {data.getItemsByYear.map(item => {\n                return (\n                  <Item\n                    key={item.title}\n                    item={item}\n                    type={ITEM_CONST.TYPE.PAINTING}\n                  />\n                );\n              })}\n              {error && (\n                <Alert message=\"Erreur au chargement des items\" isError />\n              )}\n              <button\n                type=\"button\"\n                className={s.buttonLink}\n                onClick={this.scrollTop}\n              >\n                Haut de page\n              </button>\n            </Fragment>\n          );\n        }}\n      </Query>\n    ) : (\n      <Query\n        query={GET_ITEMS_BY_HALF_YEAR_QUERY}\n        variables={{ year, type, half }}\n        ssr\n      >\n        {({ loading, error, data }) => {\n          if (loading) return <div className={s.loading}>Chargement...</div>;\n\n          return (\n            <Fragment>\n              <h2 className={s.titleTab}>{year}</h2>\n              {data.getItemsByHalfYear.map(item => {\n                return (\n                  <Item\n                    key={item.title}\n                    item={item}\n                    type={ITEM_CONST.TYPE.PAINTING}\n                  />\n                );\n              })}\n              {error && (\n                <Alert message=\"Erreur au chargement des items\" isError />\n              )}\n              <button\n                type=\"button\"\n                className={s.buttonLink}\n                onClick={this.scrollTop}\n              >\n                Haut de page\n              </button>\n            </Fragment>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default withStyles(s)(ItemTab);\n","import React, { Fragment } from 'react';\nimport withStyles from 'isomorphic-style-loader/withStyles';\nimport PropTypes from 'prop-types';\nimport { Tab, TabList, Tabs, TabPanel } from 'react-tabs';\n\nimport s from './PaintingsPage.css';\nimport ItemTab from '../../components/ItemDir/ItemTab';\nimport ITEM_CONSTANTS from '../../constants/itemConstants';\n\nclass PaintingsPage extends React.Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n  };\n\n  render() {\n    const year1 = 2017;\n    const year2 = 2018;\n    const year3 = 2019;\n    return (\n      <Fragment>\n        <h1 className={s.title}>{this.props.title}</h1>\n        <Tabs>\n          <TabList>\n            <Tab>{year1.toString()}</Tab>\n            <Tab>{year2.toString()}-a</Tab>\n            <Tab>{year2.toString()}-b</Tab>\n            <Tab>{year3.toString()}</Tab>\n          </TabList>\n          <TabPanel>\n            <ItemTab\n              year={year1}\n              half={0}\n              type={ITEM_CONSTANTS.TYPE.PAINTING}\n            />\n          </TabPanel>\n          <TabPanel>\n            <ItemTab\n              year={year2}\n              half={1}\n              type={ITEM_CONSTANTS.TYPE.PAINTING}\n            />\n          </TabPanel>\n          <TabPanel>\n            <ItemTab\n              year={year2}\n              half={2}\n              type={ITEM_CONSTANTS.TYPE.PAINTING}\n            />\n          </TabPanel>\n          <TabPanel>\n            <ItemTab\n              year={year3}\n              half={0}\n              type={ITEM_CONSTANTS.TYPE.PAINTING}\n            />\n          </TabPanel>\n        </Tabs>\n      </Fragment>\n    );\n  }\n}\n\nexport default withStyles(s)(PaintingsPage);\n","import React from 'react';\nimport PaintingsPage from './PaintingsPage';\nimport Layout from '../../components/GeneralLayout/Layout';\nimport ITEM_CONSTANTS from '../../constants/itemConstants';\nimport META_HTML_CONSTANTS from '../../constants/metaHtmlConstants';\n\nasync function action() {\n  const title = ITEM_CONSTANTS.TITLE.PAINTING;\n  const description = META_HTML_CONSTANTS.META_DESCRIPTION.PAINTING;\n\n  return {\n    title,\n    description,\n    chunks: ['paintings'],\n    component: (\n      <Layout>\n        <PaintingsPage title={title} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n"],"sourceRoot":""}