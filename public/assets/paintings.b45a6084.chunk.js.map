{"version":3,"sources":["/Users/marioncasters/Sites/GIT/marioncasters-site/src/data/graphql/queries/getItemsByPart.graphql","/Users/marioncasters/Sites/GIT/marioncasters-site/src/components/ItemDir/ItemTab/ItemTab.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/paintingsPage/PaintingsPage.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/paintingsPage/index.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/constants/item.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/components/ItemDir/Item/Item.js"],"names":["doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","forEach","def","refs","Set","collectFragmentReferences","node","kind","add","type","selectionSet","selections","selection","variableDefinitions","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","ItemTab","year","half","data","loading","error","useQuery","GET_ITEMS_BY_PART_QUERY","variables","ssr","className","s","titleTab","getItemsByPart","map","item","index","Item","key","title","buttonLink","onClick","window","scrollTo","top","left","behavior","propTypes","PropTypes","number","isRequired","string","PaintingsPage","selectedTab","setSelectedTab","useState","onSsr","useOnSrr","ITEM","PAINTING","TYPE","selectedIndex","onSelect","forceRenderTabPanel","toString","action","async","TITLE","description","DESCRIPTION","chunks","component","Root","PATH","ALT_IMAGE","DRAWING","SCULPTURE","LG_SIZE","MD_SIZE","SM_SIZE","SM_PX","MD_PX","FORMAT_DATE","AsyncImage","loadable","email","GLOBAL_CONSTANTS","EMAIL","itemContainer","itemTitle","dateTime","date","noWrap","Date","toLocaleDateString","spacer","technique","height","width","shape"],"mappings":"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","file":"paintings.b45a6084.chunk.js","sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getItemsByPart\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"half\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getItemsByPart\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"half\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"half\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"technique\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"length\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":210}};\n    doc.loc.source = {\"body\":\"query getItemsByPart($year: Int!, $type: String!, $half: Int!) {\\n  getItemsByPart(year: $year, type: $type, half: $half) {\\n    title\\n    date\\n    technique\\n    description\\n    height\\n    width\\n    length\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getItemsByPart\"] = oneQuery(doc, \"getItemsByPart\");\n        \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport Item from '../Item';\nimport GET_ITEMS_BY_PART_QUERY from '../../../data/graphql/queries/getItemsByPart.graphql';\nimport s from './ItemTab.css';\n\nfunction ItemTab({ year, half, type }) {\n  const scrollTop = () => {\n    window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n  };\n\n  const { data, loading, error } = useQuery(GET_ITEMS_BY_PART_QUERY, {\n    variables: { year, type, half },\n    ssr: true,\n  });\n\n  if (loading) return <div className={s.loading}>Chargement...</div>;\n  if (error) return <div>Erreur au chargement des items :(</div>;\n\n  return (\n    <>\n      <h2 className={s.titleTab}>{year}</h2>\n      {data &&\n        data.getItemsByPart.map((item, index) => (\n          <Item key={item.title} item={item} type={type} index={index} />\n        ))}\n      <button type=\"button\" className={s.buttonLink} onClick={scrollTop}>\n        Haut de page\n      </button>\n    </>\n  );\n}\n\nItemTab.propTypes = {\n  year: PropTypes.number.isRequired,\n  half: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default ItemTab;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\n\nimport s from './PaintingsPage.css';\nimport ITEM from '../../constants/item';\nimport ItemTab from '../../components/ItemDir/ItemTab';\nimport useOnSrr from '../../components/Hooks/useOnSrr';\n\nfunction PaintingsPage({ title }) {\n  const [selectedTab, setSelectedTab] = useState(0);\n  const onSsr = useOnSrr();\n\n  const year1 = 2017;\n  const year2 = 2018;\n  const year3 = 2019;\n  const type = ITEM.PAINTING.TYPE;\n\n  const scrollTop = () => {\n    window.scrollTo(0, 0);\n  };\n\n  const handleSelectTab = index => {\n    setSelectedTab(index);\n    scrollTop();\n  };\n\n  return (\n    <>\n      <h1 className={s.title}>{title}</h1>\n      <Tabs\n        selectedIndex={selectedTab}\n        onSelect={handleSelectTab}\n        forceRenderTabPanel\n      >\n        <TabList>\n          <Tab>{year1.toString()}</Tab>\n          <Tab>{year2.toString()} a</Tab>\n          <Tab>{year2.toString()} b</Tab>\n          <Tab>{year3.toString()}</Tab>\n        </TabList>\n        {onSsr ? (\n          <>\n            <TabPanel>\n              <ItemTab year={year1} half={0} type={type} />\n            </TabPanel>\n            <TabPanel>\n              <ItemTab year={year2} half={1} type={type} />\n            </TabPanel>\n            <TabPanel>\n              <ItemTab year={year2} half={2} type={type} />\n            </TabPanel>\n            <TabPanel>\n              <ItemTab year={year3} half={0} type={type} />\n            </TabPanel>\n          </>\n        ) : (\n          <>\n            <TabPanel>\n              {selectedTab === 0 && (\n                <ItemTab year={year1} half={0} type={type} />\n              )}\n            </TabPanel>\n            <TabPanel>\n              {selectedTab === 1 && (\n                <ItemTab year={year2} half={1} type={type} />\n              )}\n            </TabPanel>\n            <TabPanel>\n              {selectedTab === 2 && (\n                <ItemTab year={year2} half={2} type={type} />\n              )}\n            </TabPanel>\n            <TabPanel>\n              {selectedTab === 3 && (\n                <ItemTab year={year3} half={0} type={type} />\n              )}\n            </TabPanel>\n          </>\n        )}\n      </Tabs>\n    </>\n  );\n}\n\nPaintingsPage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default PaintingsPage;\n","import React from 'react';\nimport PaintingsPage from './PaintingsPage';\nimport ITEM from '../../constants/item';\nimport { DESCRIPTION } from '../../constants/metaHtml';\nimport Root from '../../components/LayoutRep/Root';\n\nasync function action() {\n  const title = ITEM.PAINTING.TITLE;\n  const description = DESCRIPTION.PAINTING;\n\n  return {\n    title,\n    description,\n    chunks: ['paintings'],\n    component: (\n      <Root>\n        <PaintingsPage title={title} />\n      </Root>\n    ),\n  };\n}\n\nexport default action;\n","const ITEM = {\n  PAINTING: {\n    TYPE: 'painting',\n    PATH: '/images/paintings',\n    TITLE: 'Peintures',\n    ALT_IMAGE: 'Peinture de Marion Casters',\n  },\n\n  DRAWING: {\n    TYPE: 'drawing',\n    PATH: '/images/drawings',\n    TITLE: 'Dessins',\n    ALT_IMAGE: 'Dessin de Marion Casters',\n  },\n\n  SCULPTURE: {\n    TYPE: 'sculpture',\n    PATH: '/images/sculptures',\n    TITLE: 'Sculptures',\n    ALT_IMAGE: 'Sculpture de Marion Casters',\n  },\n\n  LG_SIZE: 'lg',\n  MD_SIZE: 'md',\n  SM_SIZE: 'sm',\n  SM_PX: 384,\n  MD_PX: 640,\n\n  FORMAT_DATE: 'dd/MM/yyyy',\n};\n\nexport default ITEM;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\n\nimport s from './Item.css';\nimport ITEM from '../../../constants/item';\nimport GLOBAL_CONSTANTS from '../../../constants/globalConstants';\n\nconst AsyncImage = loadable(() =>\n  import(/* webpackChunkName: 'asyncImage' */ '../Image'),\n);\n\nfunction Item({ item, type }) {\n  const email = GLOBAL_CONSTANTS.EMAIL;\n\n  return (\n    <article className={s.itemContainer}>\n      <h2 className={s.itemTitle}>{item.title}</h2>\n      <AsyncImage type={type} title={item.title} />\n      <figcaption>\n        <time dateTime={item.date} className={s.noWrap}>\n          {new Date(item.date).toLocaleDateString()}\n        </time>\n        <span className={s.spacer}> | </span>\n        <p className={s.noWrap}>{item.technique}</p>\n        <span className={s.spacer}> | </span>\n        <p className={s.noWrap}>\n          {item.height} x {item.width}\n          {type === ITEM.SCULPTURE.TYPE && ` x ${item.length}`} cm\n        </p>\n      </figcaption>\n      <address className={s.email}>{email}</address>\n    </article>\n  );\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    date: PropTypes.string,\n    technique: PropTypes.string,\n    description: PropTypes.string,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    length: PropTypes.number,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Item;\n"],"sourceRoot":""}