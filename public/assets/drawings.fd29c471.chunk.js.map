{"version":3,"sources":["/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/drawingsPage/DrawingsPage.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/routes/drawingsPage/index.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/constants/item.js","/Users/marioncasters/Sites/GIT/marioncasters-site/src/data/graphql/queries/getAllItems.graphql","/Users/marioncasters/Sites/GIT/marioncasters-site/src/components/ItemDir/Item/Item.js"],"names":["DrawingsPage","title","type","ITEM","DRAWING","TYPE","data","loading","error","useQuery","GET_ITEMS_QUERY","variables","ssr","className","s","getAllItems","map","drawing","Item","key","item","propTypes","PropTypes","string","isRequired","action","async","TITLE","description","DESCRIPTION","chunks","component","Root","PAINTING","PATH","ALT_IMAGE","SCULPTURE","LG_SIZE","MD_SIZE","SM_SIZE","SM_PX","MD_PX","FORMAT_DATE","doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","forEach","def","refs","Set","collectFragmentReferences","node","kind","add","selectionSet","selections","selection","variableDefinitions","module","exports","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","AsyncImage","loadable","email","GLOBAL_CONSTANTS","EMAIL","itemContainer","itemTitle","dateTime","date","noWrap","Date","toLocaleDateString","spacer","technique","height","width","shape","number"],"mappings":"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","file":"drawings.fd29c471.chunk.js","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nimport Item from '../../components/ItemDir/Item';\nimport ITEM from '../../constants/item';\nimport s from './DrawingsPage.css';\nimport GET_ITEMS_QUERY from '../../data/graphql/queries/getAllItems.graphql';\n\nfunction DrawingsPage({ title }) {\n  const type = ITEM.DRAWING.TYPE;\n  const { data, loading, error } = useQuery(GET_ITEMS_QUERY, {\n    variables: { type },\n    ssr: true,\n  });\n  if (loading) return <div className={s.loading}>Chargement...</div>;\n  if (error) return <div>Erreur au chargement des Dessins :(</div>;\n\n  return (\n    <>\n      <h1 className={s.title}>{title}</h1>\n      {data.getAllItems &&\n        data.getAllItems.map(drawing => (\n          <Item key={drawing.title} item={drawing} type={type} />\n        ))}\n    </>\n  );\n}\n\nDrawingsPage.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default DrawingsPage;\n","import React from 'react';\nimport DrawingsPage from './DrawingsPage';\nimport ITEM from '../../constants/item';\nimport { DESCRIPTION } from '../../constants/metaHtml';\nimport Root from '../../components/LayoutRep/Root';\n\nasync function action() {\n  const title = ITEM.DRAWING.TITLE;\n  const description = DESCRIPTION.DRAWING;\n\n  return {\n    title,\n    description,\n    chunks: ['drawings'],\n    component: (\n      <Root>\n        <DrawingsPage title={title} />\n      </Root>\n    ),\n  };\n}\n\nexport default action;\n","const ITEM = {\n  PAINTING: {\n    TYPE: 'painting',\n    PATH: '/images/paintings',\n    TITLE: 'Peintures',\n    ALT_IMAGE: 'Peinture de Marion Casters',\n  },\n\n  DRAWING: {\n    TYPE: 'drawing',\n    PATH: '/images/drawings',\n    TITLE: 'Dessins',\n    ALT_IMAGE: 'Dessin de Marion Casters',\n  },\n\n  SCULPTURE: {\n    TYPE: 'sculpture',\n    PATH: '/images/sculptures',\n    TITLE: 'Sculptures',\n    ALT_IMAGE: 'Sculpture de Marion Casters',\n  },\n\n  LG_SIZE: 'lg',\n  MD_SIZE: 'md',\n  SM_SIZE: 'sm',\n  SM_PX: 384,\n  MD_PX: 640,\n\n  FORMAT_DATE: 'dd/MM/yyyy',\n};\n\nexport default ITEM;\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"getAllItems\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"getAllItems\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"type\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"title\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"technique\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"height\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"width\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"length\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":159}};\n    doc.loc.source = {\"body\":\"query getAllItems($type: String!) {\\n  getAllItems(type: $type) {\\n    id\\n    title\\n    date\\n    technique\\n    description\\n    height\\n    width\\n    length\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"getAllItems\"] = oneQuery(doc, \"getAllItems\");\n        \n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\n\nimport s from './Item.css';\nimport ITEM from '../../../constants/item';\nimport GLOBAL_CONSTANTS from '../../../constants/globalConstants';\n\nconst AsyncImage = loadable(() =>\n  import(/* webpackChunkName: 'asyncImage' */ '../Image'),\n);\n\nfunction Item({ item, type }) {\n  const email = GLOBAL_CONSTANTS.EMAIL;\n\n  return (\n    <article className={s.itemContainer}>\n      <h2 className={s.itemTitle}>{item.title}</h2>\n      <AsyncImage type={type} title={item.title} />\n      <figcaption>\n        <time dateTime={item.date} className={s.noWrap}>\n          {new Date(item.date).toLocaleDateString()}\n        </time>\n        <span className={s.spacer}> | </span>\n        <p className={s.noWrap}>{item.technique}</p>\n        <span className={s.spacer}> | </span>\n        <p className={s.noWrap}>\n          {item.height} x {item.width}\n          {type === ITEM.SCULPTURE.TYPE && ` x ${item.length}`} cm\n        </p>\n      </figcaption>\n      <address className={s.email}>{email}</address>\n    </article>\n  );\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string,\n    date: PropTypes.string,\n    technique: PropTypes.string,\n    description: PropTypes.string,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    length: PropTypes.number,\n  }).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Item;\n"],"sourceRoot":""}